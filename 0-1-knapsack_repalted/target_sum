Q==> You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -.
For each integer, you should choose one from + and - as its new symbol.
Find out how many ways to assign symbols to make sum of integers equal to target S.

Sol==> (Only function )

int findTargetSumWays(vector<int>& nums, int S) {
       
        int n=nums.size();
        int c=0;
        int sum=0;
        for(int i=0;i<n;i++) {sum+=nums[i]; if(nums[i]==0) c++;}
        if(sum<S) return 0;
        if((sum+S)&1) return 0;
        int x=sum&1;
        int W=(S+sum+x)/2;
        long long int dp[n+1][W+1];
        memset(dp,0,sizeof(dp));
        for(int i=0;i<=n;i++) dp[i][0]=1;
        
        for(int j=1;j<=W;j++) dp[0][j]=0;
        dp[0][0]=1;
        for(int i=1;i<=n;i++){
            for(int j=0;j<=W;j++){
                if(nums[i-1]<=j){
                    dp[i][j]=dp[i-1][j]+dp[i-1][j-nums[i-1]];
                }else dp[i][j]=dp[i-1][j];
            }
        } 
        if(c==1) c=0;
        return dp[n][W];
    }